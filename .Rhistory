pwd
getwd
getwd()
read.csv("mydata")
getwd()
library(xlst)
library(xsls)
library(xlsx)
library(xlsx)
library(xlsx)
subjectTrainDf      <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"), stringsAsFactors=FALSE)
activityIdTrainDf   <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), header = FALSE, col.names = c("activityid"), stringsAsFactors=FALSE)
activityIdTrainDf   <- merge(x = activityIdTrainDf, y = activityLabelsDf, by = "activityid")
trainMeasurementsDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE, col.names = featuresDf$description, stringsAsFactors=FALSE)
library(dplyr)
library(plyr)
dataDirectoryBasePath <- "./UCI HAR Dataset"
# Load features
featuresDf <- read.table(paste0(dataDirectoryBasePath, "/features.txt"), sep = " ", header = FALSE, col.names = c("featureid","description"))
# Load activity labels
activityLabelsDf <- read.table(paste0(dataDirectoryBasePath, "/activity_labels.txt"), sep = " ", header = FALSE, col.names = c("activityid","description"))
## Load train data
subjectTrainDf      <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"), stringsAsFactors=FALSE)
activityIdTrainDf   <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), header = FALSE, col.names = c("activityid"), stringsAsFactors=FALSE)
activityIdTrainDf   <- merge(x = activityIdTrainDf, y = activityLabelsDf, by = "activityid")
trainMeasurementsDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE, col.names = featuresDf$description, stringsAsFactors=FALSE)
getwd()
setwd("C:/Users/Fausto/Documents/coursera/data_scientist/workspace/cleandata/project")
subjectTrainDf      <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"), stringsAsFactors=FALSE)
activityIdTrainDf   <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), header = FALSE, col.names = c("activityid"), stringsAsFactors=FALSE)
mergedActivityTrain <- merge(x = activityIdTrainDf, y = activityLabelsDf, by = "activityid")
trainMeasurementsDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE, col.names = featuresDf$description, stringsAsFactors=FALSE)
activityTrain       <- mergedActivityTrain[,2]
trainMeasurementsDf <- cbind(activity = activityTrain, subject = subjectTrainDf, trainMeasurementsDf)
#If the files are not in the current working folder, display a message
dataDirectoryBasePath <- "./UCI HAR Dataset"
if (!file.exists(dataDirectoryBasePath)) {
stop(paste("The directory 'UCI HAR Dataset' does not exist in ", getwd()))
}
# Load features
featuresDf <- read.table(paste0(dataDirectoryBasePath, "/features.txt"), sep = " ", header = FALSE, col.names = c("featureid","description"))
# Load activity labels
activityLabelsDf <- read.table(paste0(dataDirectoryBasePath, "/activity_labels.txt"), sep = " ", header = FALSE, col.names = c("activityid","description"))
## Load train data
subjectTrainDf      <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"), stringsAsFactors=FALSE)
activityIdTrainDf   <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), header = FALSE, col.names = c("activityid"), stringsAsFactors=FALSE)
mergedActivityTrain <- merge(x = activityIdTrainDf, y = activityLabelsDf, by = "activityid")
trainMeasurementsDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE, col.names = featuresDf$description, stringsAsFactors=FALSE)
activityTrain       <- mergedActivityTrain[,2]
trainMeasurementsDf <- cbind(activity = activityTrain, subject = subjectTrainDf, trainMeasurementsDf)
View(trainMeasurementsDf)
activityTrain
distinct(activityTrain)
distinct(as.character(activityTrain))
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
subjectTrainDf
distinct(subjectTrainDf)
mergedActivityTrain
mergedActivityTrain
trainMeasurementsDf <- cbind(activity = activityTrain, subject = subjectTrainDf)
trainMeasurementsDf
View(distinct(trainMeasurementsDf))
table(trainMeasurementsDf)
testMeasurementsDf <- cbind(activity = activityTest, subject = subjectTestDf)
table(testMeasurementsDf)
mergedMeasurement <- rbind(trainMeasurementsDf, testMeasurementsDf)
table(mergedMeasurement)
testMeasurementsDf <- bind_cols(activity = activityTest, subject = subjectTestDf, testMeasurementsDf)
testMeasurementsDf <- bind_cols(activityTest, subjectTestDf)
testMeasurementsDf <- bind_cols(mergedActivityTest, subjectTestDf)
table(testMeasurementsDf)
testMeasurementsDf <- bind_cols(activityTest, subjectTestDf)
subjectTestDf
class(subjectTestDf)
names(subjectTestDf)
testMeasurementsDf <- bind_cols(activityTest, subjectTestDf[,1])
features <- read.table(paste0(dataDirectoryBasePath, "/features.txt"), sep = " ", header = FALSE, col.names = c("featureid","description"))
subjectsTraining     <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"), stringsAsFactors=FALSE)
subjectsTest         <- read.table(paste0(dataDirectoryBasePath, "/test/subject_test.txt"), sep = " ", header = FALSE, col.names = c("subjectid"), stringsAsFactors=FALSE)
subjects <- rbind(subjectsTraining, subjectsTest)
activityIdsTraining  <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), header = FALSE, col.names = c("activityid"), stringsAsFactors=FALSE)
activityIdsTest      <- read.table(paste0(dataDirectoryBasePath, "/test/y_test.txt"), header = FALSE, col.names = c("activityid"), stringsAsFactors=FALSE)
activityIds <- rbind(activityIdsTraining, activityIdsTest)
measurementsTraining <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE, col.names = features$description, stringsAsFactors=FALSE)
measurementsTest     <- read.table(paste0(dataDirectoryBasePath, "/test/X_test.txt"), header = FALSE, col.names = features$description, stringsAsFactors=FALSE)
measurements <- rbind(measurementsTraining, measurementsTest)
meargedDataSet <- cbind(subjects, activityIds, measurements)
table(meargedDataSet)
View(meargedDataSet)
names(mergedDataSet)
mergedDataSet <- cbind(subjects, activityIds, measurements)
names(mergedDataSet)
selectedColumns <- grep( "subjectid|activityid|-mean\\(\\)|-std\\(\\)", names(mergedDataSet))
selectedColumns
grep( "subjectid|activityid|-mean\\(\\)|-std\\(\\)", names(mergedDataSet))
grep( "-mean\\(\\)|-std\\(\\)", names(mergedDataSet))
grep( "-mean\\(\\)|-std\\(\\)", featuresDf[,2])
featuresDf[,2]
class(featuresDf[,2])
as.factor(names(mergedDataSet))
grep( "subjectid|activityid|mean|std", names(mergedDataSet))
mergedDataSet <- select(mergedMeasurement, indexes)
indexes <- grep( "subjectid|activityid|mean|std", names(mergedDataSet))
mergedDataSet <- select(mergedMeasurement, indexes)
indexes <- grep("subjectid|activityid|mean|std", names(mergedDataSet), value = TRUE)
indexes
columnNames <- grep("subjectid|activityid|mean|std", names(mergedDataSet), value = TRUE)
mergedDataSet <- select(mergedMeasurement, columnNames)
indexes <- grep("subjectid|activityid|mean|std", names(mergedDataSet), value = TRUE)
mergedDataSet <- select(mergedDataSet, indexes)
indexes <- grep("subjectid|activityid|mean|std", names(mergedDataSet))
mergedDataSet <- select(mergedDataSet, indexes)
mergedDataSet
View(mergedDataSet)
activityDescriptions <- read.table(paste0(dataDirectoryBasePath, "/activity_labels.txt"), sep = " ", header = FALSE, col.names = c("activityid","description"))
activityDescriptions
merge(x = mergedDataSet, y = activities, by = "activityid")
activities <- read.table(paste0(dataDirectoryBasePath, "/activity_labels.txt"), sep = " ", header = FALSE, col.names = c("activityid","description"))
mergedDataSet <- merge(x = mergedDataSet, y = activities, by = "activityid")
View(mergedDataSet)
mergedDataSet <- cbind(subjects, activityIds, measurements)
#####################################################################################################
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
#####################################################################################################
indexes <- grep("subjectid|activityid|mean|std", names(mergedDataSet))
mergedDataSet <- select(mergedDataSet, indexes)
write.table(mergedDataSet, file="./UCI HAR Dataset/mergedDataSet.txt",  row.names=FALSE, sep="\t", quote=FALSE)
merge(y = mergedDataSet, x = activities, by = "activityid")
View(merge(y = mergedDataSet, x = activities, by = "activityid"))
mergedDataSet <- merge(x = activities, y = mergedDataSet, by = "activityid")
View(mergedDataSet)
View(mergedDataSet)
?rename
select(mergedDataSet, description = activitydescription)
select(mergedDataSet, description = "activitydescription")
select(mergedDataSet, description = activitydescription)
select(mergedDataSet, activitydescription = description)
View(select(mergedDataSet, activitydescription = description))
names(mergedDataSet)
rename(mergedDataSet, c("description"="activitydescription"))
names(mergedDataSet)
names(rename(mergedDataSet, c("description"="activitydescription")))
mergedDataSet <- rename(mergedDataSet, c("description"="activitydescription", "subjectid"="subject"))
names(mergedDataSet)
tidyDataSet <- group_by(mergedMeasurement, activitydescription, subject)
tidyDataSet <- group_by(mergedDataSet, activitydescription, subject)
View(tidyDataSet)
summarise_each(tidyDataSet, funs(mean))
summary <- summarise_each(tidyDataSet, funs(mean))
tidyDataSet <- group_by(mergedDataSet, activitydescription, subject)
tidyDataSet <- summarise_each(tidyDataSet, funs(mean))
tidyDataSet <- arrange(tidyDataSet, activity, subjectid)
write.table(tidyDataSet, file="./UCI HAR Dataset/tidyDataSet.txt",  row.names=FALSE, sep="\t", quote=FALSE)
tidyDataSet <- group_by(mergedDataSet, activitydescription, subject)
tidyDataSet <- summarise_each(tidyDataSet, funs(mean))
tidyDataSet <- arrange(tidyDataSet, activitydescription, subject)
View(tidyDataSet)
View(select(tidyDataSet, -activityid))
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
