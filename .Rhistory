pwd
getwd
getwd()
read.csv("mydata")
getwd()
library(xlst)
library(xsls)
library(xlsx)
library(xlsx)
library(xlsx)
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
count = n()
unique = n_distinct(ip_id)
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, pack_sum$count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>%
select() %>%
print
View(result3)
cran %>%
select() %>%
print
cran %>% select() %>% print
submit()
submit()
submit()
submit()
submit()
submit()
reset
reset()
exit()
swirl()
swirl()
library(tidyr)
students
?gather
gather(students, sex,count,-grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
students2
submit()
students3
?gather
submit()
?spread
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
### Call to mutate() goes here %>%
mutate(class = extract_numeric(class))
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
### Call to mutate() goes here %>%
mutate(class = extract_numeric(class))
print()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "Y")
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
?separate
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now()
now <- now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)]
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
dmy("25081985")
dmy("192012")
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms("2014-08-23 17:23:02")
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = hour(now()), minutes = minute(now()), seconds = second(now()))
this_moment
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hour = 17, minute = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong" )
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
getwd()
}
if (!file.exists(dataDirectoryBasePath)) {
)
!file.exists(dataDirectoryBasePath)
dataDirectoryBasePath <- "./UCI HAR Dataset"
if (!file.exists(dataDirectoryBasePath)) {
cat(paste("The directory UCI HAR Dataset does not exist in ", getwd()))
}
#If the files are not in the current working folder, display a message
dataDirectoryBasePath <- "./UCI HAR Dataset"
if (!file.exists(dataDirectoryBasePath)) {
cat(paste("The directory UCI HAR Dataset does not exist in ", getwd()))
}
#If the files are not in the current working folder, display a message
dataDirectoryBasePath <- "./UCI HAR Dataset"
if (!file.exists(dataDirectoryBasePath)) {
cat(paste("The directory UCI HAR Dataset does not exist in ", getwd()))
}
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
setwd("C:/Users/Fausto/Documents/coursera/data_scientist/workspace/cleandata/project")
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
getwd()
featuresDf <- read.delim(file = paste0("./UCI HAR Dataset", "/features.txt"))
featuresDf
featuresDf <- read.delim(file = paste0("./UCI HAR Dataset", "/features.txt"), sep = " ")
featuresDf
featuresDf <- read.delim(file = paste0("./UCI HAR Dataset", "/features.txt"), sep = " ", head = FALSE)
featuresDf
head(featuresDf)
featuresDf <- read.delim(file = paste0("./UCI HAR Dataset", "/features.txt"), sep = " ", header =  = FALSE)
featuresDf <- read.delim(file = paste0("./UCI HAR Dataset", "/features.txt"), sep = " ", header = FALSE)
head(featuresDf)
?mutate
rename(featuresDf, featureid = V1, description = V2)
featuresDf %>%
read.delim(paste0(dataDirectoryBasePath, "/features.txt"), sep = " ", header = FALSE) %>%
rename(featureid = V1, description = V2)
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
source('~/coursera/data_scientist/workspace/cleandata/project/run_analysis.R')
featuresDf <- read.delim(paste0(dataDirectoryBasePath, "/features.txt"), sep = " ", header = FALSE)
featuresDf <- rename(featuresDf, featureid = V1, description = V2)
head(featuresDf)
activityLabelsDf <- read.delim(paste0(dataDirectoryBasePath, "/activity_labels.txt"), sep = " ", header = FALSE)
activityLabelsDf <- rename(activityLabelsDf, featureid = V1, description = V2)
activityLabelsDf
?read.delim
read.table(paste0(dataDirectoryBasePath, "/features.txt"), sep = " ", header = FALSE, col.names = c("featureid","description"))
subjectTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"))
head(subjectTrainDf)
dim(subjectTrainDf)
subjectTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"))
trainMeasurementsDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), sep = " ", header = FALSE, col.names = c("activityid"))
activityIdTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), sep = " ", header = FALSE, col.names = featuresDf$description)
subjectTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/subject_train.txt"), sep = " ", header = FALSE, col.names = c("subjectid"))
trainMeasurementsDf <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), sep = " ", header = FALSE, col.names = c("activityid"))
activityIdTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), sep = " ", header = FALSE, col.names = featuresDf$description)
featuresDf$description
length(featuresDf$description)
activityIdTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), sep = " ", header = FALSE)
activityIdTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), sep = " ", header = FALSE)
activityIdTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE)
count(activityIdTrainDf)
head(activityIdTrainDf)
View(activityIdTrainDf)
activityIdTrainDf[2,]
featuresDf$description
length(featuresDf$description)
activityIdTrainDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE, col.names = featuresDf$description)
View(activityIdTrainDf)
activityIdTrainDf <-   read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), sep = " ", header = FALSE)
activityIdTrainDf
trainMeasurementsDf <- read.table(paste0(dataDirectoryBasePath, "/train/X_train.txt"), header = FALSE, col.names = featuresDf$description)
mutate(trainMeasurementsDf, subject = subjectTrainDf)
?cbind
trainMeasurementsDf <- cbind(subject = subjectTrainDf, trainMeasurementsDf)
head(trainMeasurementsDf)
activityLabelsDf
merge(activityIdTrainDf, activityLabelsDf, by = "CustomerId", all = TRUE)
activityIdTrainDf
head(activityIdTrainDf)
activityIdTrainDf   <- read.table(paste0(dataDirectoryBasePath, "/train/y_train.txt"), header = FALSE, col.names = c("activityid"))
head(activityIdTrainDf)
merge(activityIdTrainDf, activityLabelsDf, by = "activityid")
merge(activityIdTrainDf, activityLabelsDf, by.x = "activityid")
merge(activityIdTrainDf, activityLabelsDf, by.x = "activityid", by.y = "activityid")
head(activityIdTrainDf)
merge(activityIdTrainDf, activityLabelsDf, by.x = activityid, by.y = activityid)
merge(x = activityIdTrainDf, y = activityLabelsDf, by.x = "activityid", by.y = "activityid")
names(activityIdTrainDf)
names(activityLabelsDf)
activityLabelsDf <- read.table(paste0(dataDirectoryBasePath, "/activity_labels.txt"), sep = " ", header = FALSE, col.names = c("activityid","description"))
names(activityLabelsDf)
merge(x = activityIdTrainDf, y = activityLabelsDf, by.x = "activityid", by.y = "activityid")
merge(x = activityIdTrainDf, y = activityLabelsDf, by.x = "activityid", by.y = "activityid")
merge(x = activityIdTrainDf, y = activityLabelsDf, by = "activityid")
